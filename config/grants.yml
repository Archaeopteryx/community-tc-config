# This file defines "grants" of scopes to roles.  Roles can be repeated, and
# scopes will be merged.
#
# This file should be used for general-purpose roles such as parameterized
# roles and global grants.  Grants related to a specific project should be in
# projects.yml, instead.
#
# Available roles to grant to:
#   github-org-admin:<org> -- admins of the given org
#   github-team:<org>/<team> -- members of the given team
#   login-identity:<identity> -- a specfic user (try to avoid this!)
#   repo:github.com/<org>/<repo>:<event> -- see 
#      https://docs.taskcluster.net/docs/reference/integrations/github/taskcluster-yml-v1#scopes-and-roles
#
# Each item has:
#   grant: a list of scopes to grant
#   to: a role or list of roles to grant the scopes to

# project-admin:* parameterized role, defining "admin" scopes for a project
- grant:
    # project-specific scopes
    - project:<..>:*

    # project-specific roles
    - assume:project:<..>:*
    - auth:create-role:project:<..>:*
    - auth:delete-role:project:<..>:*
    - auth:update-role:project:<..>:*

    # project-specific clients
    - auth:create-client:project/<..>/*
    - auth:delete-client:project/<..>/*
    - auth:disable-client:project/<..>/*
    - auth:enable-client:project/<..>/*
    - auth:update-client:project/<..>/*
    - auth:reset-access-token:project/<..>/*

    # project-specific taskQueueIds
    - queue:create-task:lowest:proj-<..>/*
    - queue:create-task:very-low:proj-<..>/*
    - queue:create-task:low:proj-<..>/*
    - queue:create-task:medium:proj-<..>/*
    - queue:create-task:high:proj-<..>/*
    - queue:create-task:very-high:proj-<..>/*
    - queue:create-task:highest:proj-<..>/*
    - queue:quarantine-worker:proj-<..>/*

    # project-specific private artifacts
    - queue:get-artifact:project/<..>/*

    # project-specific hooks
    - assume:hook-id:project-<..>/*
    - auth:create-role:hook-id:project-<..>/*
    - auth:delete-role:hook-id:project-<..>/*
    - auth:update-role:hook-id:project-<..>/*
    - hooks:modify-hook:project-<..>/*
    - hooks:trigger-hook:project-<..>/*

    # project-specific index routes
    - index:insert-task:project.<..>.*
    - queue:route:index.project.<..>.*

    # project-specific worker pools and workers
    - worker-manager:create-worker-type:proj-<..>/*  # old, see https://bugzilla.mozilla.org/show_bug.cgi?id=1583935
    - worker-manager:update-worker-type:proj-<..>/*  # old
    - worker-manager:create-worker-pool:proj-<..>/*
    - worker-manager:update-worker-pool:proj-<..>/*
    - worker-manager:create-worker:proj-<..>/*
    - worker-manager:remove-worker:proj-<..>/*

    # project-specific worker pools secrets
    - secrets:get:worker-pool:proj-<..>/*
    - secrets:set:worker-pool:proj-<..>/*

    # project-specific secrets
    - secrets:get:project/<..>/*
    - secrets:set:project/<..>/*

    # allow all caches, since workers are per-project
    - docker-worker:cache:*
    - generic-worker:cache:*
  to: project-admin:*

# repo-admin:* parameterized role, defining administrative scopes over a github repo
- grant:
    - auth:create-role:repo:<..>
    - auth:delete-role:repo:<..>
    - auth:update-role:repo:<..>
    - assume:repo:<..>
  to: repo-admin:*

- grant:
    # support users' creation of clients
    - auth:create-client:<..>/*
    - auth:delete-client:<..>/*
    - auth:update-client:<..>/*
    - auth:reset-access-token:<..>/*
    # grant all users access to scheduler-id `-`, the default
    - queue:scheduler-id:-
  to:
    - login-identity:*

# Grant permission to use websocktunnel with audience `communitytc` to all
# workers in all pools
- grant: auth:websocktunnel-token:communitytc/*
  to: worker-pool:*

# As a temporary measure until we invent a better solution, we allow a number
# of lucky people to rerun, cancel, and schedule all tasks created by
# taskcluster-github.
- grant:
    - queue:cancel-task:taskcluster-github/*
    - queue:schedule-task:taskcluster-github/*
    - queue:rerun-task:taskcluster-github/*
  to:
    - github-team:taskcluster/core
    - login-identity:github/1038527|glandium
